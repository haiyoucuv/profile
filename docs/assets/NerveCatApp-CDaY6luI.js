import{V as W,W as B,a as O}from"./VirtualApp-D697HfPS.js";import{r as c,j as s,f as h,b as q,R as U,A as P}from"./index-Cqqea-f1.js";const z="_nerveCat_n401j_1",H="_header_n401j_15",Z="_gameState_n401j_30",T="_result_n401j_37",V="_gameContainer_n401j_42",F="_grid_n401j_56",X="_cell_n401j_68",Y="_empty_n401j_81",J="_blocked_n401j_88",K="_cat_n401j_93",Q="_catIcon_n401j_97",ee="_controls_n401j_100",te="_restartBtn_n401j_105",a={nerveCat:z,header:H,gameState:Z,result:T,gameContainer:V,grid:F,cell:X,empty:Y,blocked:J,cat:K,catIcon:Q,controls:ee,restartBtn:te},ne=[[1,0],[1,-1],[0,-1],[-1,0],[-1,1],[0,1]],u={GRID_RADIUS:5,IDEAL_CELL_SIZE:50,PADDING:20},se=d=>{const i=[];for(let l=-d;l<=d;l++)for(let m=Math.max(-d,-l-d);m<=Math.min(d,-l+d);m++)i.push([l,m]);return i},ae=()=>{const[d,i]=c.useState("ready"),[l,m]=c.useState(new Map),[_,S]=c.useState([0,0]),[y,w]=c.useState(0),[ce,$]=c.useState(1),p=c.useRef(null),E=c.useRef(null),I=se(u.GRID_RADIUS),C=c.useCallback(()=>{const e=new Map;return I.forEach(([n,t])=>{e.set(`${n},${t}`,0)}),e.set("0,0",2),e},[I]),f=c.useCallback((e,n)=>{const t=-e-n;return Math.abs(e)===u.GRID_RADIUS||Math.abs(n)===u.GRID_RADIUS||Math.abs(t)===u.GRID_RADIUS},[]),N=c.useCallback((e,n)=>ne.map(([t,o])=>[e+t,n+o]),[]),R=c.useCallback((e,n)=>{const t=new Set,o=[{q:e,r:n,path:[[e,n]]}];for(;o.length>0;){const r=o.shift(),x=`${r.q},${r.r}`;if(!t.has(x)){if(t.add(x),f(r.q,r.r))return r.path[1]||null;for(const[g,b]of N(r.q,r.r)){const k=`${g},${b}`;l.has(k)&&l.get(k)===0&&!t.has(k)&&o.push({q:g,r:b,path:[...r.path,[g,b]]})}}}return null},[l,f,N]),D=c.useCallback(()=>{const e=R(_[0],_[1]);e?(m(n=>{const t=new Map(n);return t.set(`${_[0]},${_[1]}`,0),t.set(`${e[0]},${e[1]}`,2),t}),S(e),f(e[0],e[1])&&i("lose")):i("win")},[_,R,f]),A=c.useCallback((e,n)=>{const t=`${e},${n}`;d!=="playing"||l.get(t)!==0||(m(o=>{const r=new Map(o);return r.set(t,1),r}),w(o=>o+1),setTimeout(()=>{D()},300))},[d,l,D]),j=c.useCallback(()=>{m(C()),S([0,0]),w(0),i("playing")},[C]),v=c.useCallback(()=>{j()},[j]);c.useEffect(()=>{j()},[j]),c.useCallback(()=>{if(p.current&&E.current){const e=p.current.offsetWidth,n=p.current.offsetHeight,t=u.GRID_RADIUS*u.IDEAL_CELL_SIZE*2+u.PADDING*2,o=t+150,r=(e-20)/t,x=(n-20)/o,g=Math.min(r,x,1);$(g)}},[]),c.useEffect(()=>{const e=()=>{m(C()),S([0,0]),w(0),i("playing")},n=p.current;if(n){const t=new ResizeObserver(e);return t.observe(n),()=>{t.disconnect()}}},[C]);const M=()=>{switch(d){case"ready":return s.jsx("div",{className:a.gameState,children:"准备开始"});case"playing":return s.jsxs("div",{className:a.gameState,children:["游戏中 - 移动次数: ",y]});case"win":return s.jsxs("div",{className:a.gameState,children:[s.jsx("div",{className:a.result,children:"🎉 胜利！"}),s.jsx("div",{children:"你成功围住了神经猫！"}),s.jsx("button",{onClick:v,className:a.restartBtn,children:"再玩一次"})]});case"lose":return s.jsxs("div",{className:a.gameState,children:[s.jsx("div",{className:a.result,children:"😿 失败！"}),s.jsx("div",{children:"神经猫逃走了！"}),s.jsx("button",{onClick:v,className:a.restartBtn,children:"再玩一次"})]})}},L=()=>s.jsx("div",{className:a.grid,children:I.map(([e,n])=>{const t=`${e},${n}`,o=l.get(t)||0;return s.jsx("div",{className:`${a.cell} ${o===1?a.blocked:o===2?a.cat:a.empty}`,onClick:()=>A(e,n),style:{position:"absolute",left:`${(e*1.5+n*.75)*u.IDEAL_CELL_SIZE}px`,top:`${n*Math.sqrt(3)/2*u.IDEAL_CELL_SIZE}px`},children:o===2&&s.jsx("span",{className:a.catIcon,children:"🐱"})},t)})});return s.jsxs("div",{className:a.nerveCat,ref:p,children:[s.jsxs("div",{className:a.header,children:[s.jsx("h2",{children:"围住神经猫"}),s.jsx("p",{children:"点击六边形围住神经猫，阻止它到达边界！"})]}),M(),s.jsx("div",{className:a.gameContainer,ref:E,children:L()}),d==="playing"&&s.jsx("div",{className:a.controls,children:s.jsx("button",{onClick:v,className:a.restartBtn,children:"重新开始"})})]})};class G extends W{static icon=h.icon;static name=h.name;static id=h.id;root=null;launch(){this.openWindow()}openWindow(){const i=B.ins.showWindow("",{title:h.name,icon:h.icon,x:h.defaultWindow.x||100,y:h.defaultWindow.y||100,width:h.defaultWindow.width,height:h.defaultWindow.height});this.root=q.createRoot(i.content),this.root.render(U.createElement(ae)),this.windows.set(i.id,i),i.on(O.EventType.ON_CLOSE,this.onClickClose)}onClickClose=()=>{P.ins.exitApp(G)}}export{G as NerveCatApp};
