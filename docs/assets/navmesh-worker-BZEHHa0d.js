var X=Object.defineProperty;var K=(s,e,t)=>e in s?X(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var m=(s,e,t)=>K(s,typeof e!="symbol"?e+"":e,t);const Q=["Recast","Detour","DetourNavMeshBuilder","DetourTileCacheBuilder","NavMeshImporter","NavMeshExporter","CrowdUtils","ChunkyTriMeshUtils","RecastDebugDraw","DetourDebugDraw"],Z=["rcConfig","rcContext","dtNavMeshParams","dtNavMeshCreateParams","RecastLinearAllocator","RecastFastLZCompressor","rcChunkyTriMesh","dtTileCacheParams","dtTileCacheLayerHeader","Vec3","BoolRef","IntRef","UnsignedIntRef","UnsignedCharRef","UnsignedShortRef","FloatRef","IntArray","UnsignedIntArray","UnsignedCharArray","UnsignedShortArray","FloatArray"],r={isNull:s=>r.Module.getPointer(s)===0,destroy:s=>{r.Module.destroy(s)}},l={},j=async s=>{if(r.Module===void 0){{const e=(await import("./recast-navigation.wasm-compat-BsXgPnHX.js")).default;r.Module=await e()}for(const e of Q)r[e]=new r.Module[e];for(const e of Z)r[e]=r.Module[e];l.RC_BORDER_REG=r.Recast.BORDER_REG,l.RC_MULTIPLE_REGS=r.Recast.MULTIPLE_REGS,l.RC_BORDER_VERTEX=r.Recast.BORDER_VERTEX,l.RC_AREA_BORDER=r.Recast.AREA_BORDER,l.RC_CONTOUR_REG_MASK=r.Recast.CONTOUR_REG_MASK,l.RC_MESH_NULL_IDX=r.Recast.MESH_NULL_IDX,l.RC_NULL_AREA=r.Recast.NULL_AREA,l.RC_WALKABLE_AREA=r.Recast.WALKABLE_AREA,l.RC_NOT_CONNECTED=r.Recast.NOT_CONNECTED,l.RC_CONTOUR_TESS_WALL_EDGES=r.Module.RC_CONTOUR_TESS_WALL_EDGES,l.RC_CONTOUR_TESS_AREA_EDGES=r.Module.RC_CONTOUR_TESS_AREA_EDGES,l.RC_LOG_PROGRESS=r.Module.RC_LOG_PROGRESS,l.RC_LOG_WARNING=r.Module.RC_LOG_WARNING,l.RC_LOG_ERROR=r.Module.RC_LOG_ERROR,l.RC_TIMER_TOTAL=r.Module.RC_TIMER_TOTAL,l.RC_TIMER_TEMP=r.Module.RC_TIMER_TEMP,l.RC_TIMER_RASTERIZE_TRIANGLES=r.Module.RC_TIMER_RASTERIZE_TRIANGLES,l.RC_TIMER_BUILD_COMPACTHEIGHTFIELD=r.Module.RC_TIMER_BUILD_COMPACTHEIGHTFIELD,l.RC_TIMER_BUILD_CONTOURS=r.Module.RC_TIMER_BUILD_CONTOURS,l.RC_TIMER_BUILD_CONTOURS_TRACE=r.Module.RC_TIMER_BUILD_CONTOURS_TRACE,l.RC_TIMER_BUILD_CONTOURS_SIMPLIFY=r.Module.RC_TIMER_BUILD_CONTOURS_SIMPLIFY,l.RC_TIMER_FILTER_BORDER=r.Module.RC_TIMER_FILTER_BORDER,l.RC_TIMER_FILTER_WALKABLE=r.Module.RC_TIMER_FILTER_WALKABLE,l.RC_TIMER_MEDIAN_AREA=r.Module.RC_TIMER_MEDIAN_AREA,l.RC_TIMER_FILTER_LOW_OBSTACLES=r.Module.RC_TIMER_FILTER_LOW_OBSTACLES,l.RC_TIMER_BUILD_POLYMESH=r.Module.RC_TIMER_BUILD_POLYMESH,l.RC_TIMER_MERGE_POLYMESH=r.Module.RC_TIMER_MERGE_POLYMESH,l.RC_TIMER_ERODE_AREA=r.Module.RC_TIMER_ERODE_AREA,l.RC_TIMER_MARK_BOX_AREA=r.Module.RC_TIMER_MARK_BOX_AREA,l.RC_TIMER_MARK_CYLINDER_AREA=r.Module.RC_TIMER_MARK_CYLINDER_AREA,l.RC_TIMER_MARK_CONVEXPOLY_AREA=r.Module.RC_TIMER_MARK_CONVEXPOLY_AREA,l.RC_TIMER_BUILD_DISTANCEFIELD=r.Module.RC_TIMER_BUILD_DISTANCEFIELD,l.RC_TIMER_BUILD_DISTANCEFIELD_DIST=r.Module.RC_TIMER_BUILD_DISTANCEFIELD_DIST,l.RC_TIMER_BUILD_DISTANCEFIELD_BLUR=r.Module.RC_TIMER_BUILD_DISTANCEFIELD_BLUR,l.RC_TIMER_BUILD_REGIONS=r.Module.RC_TIMER_BUILD_REGIONS,l.RC_TIMER_BUILD_REGIONS_WATERSHED=r.Module.RC_TIMER_BUILD_REGIONS_WATERSHED,l.RC_TIMER_BUILD_REGIONS_EXPAND=r.Module.RC_TIMER_BUILD_REGIONS_EXPAND,l.RC_TIMER_BUILD_REGIONS_FLOOD=r.Module.RC_TIMER_BUILD_REGIONS_FLOOD,l.RC_TIMER_BUILD_REGIONS_FILTER=r.Module.RC_TIMER_BUILD_REGIONS_FILTER,l.RC_TIMER_BUILD_LAYERS=r.Module.RC_TIMER_BUILD_LAYERS,l.RC_TIMER_BUILD_POLYMESHDETAIL=r.Module.RC_TIMER_BUILD_POLYMESHDETAIL,l.RC_TIMER_MERGE_POLYMESHDETAIL=r.Module.RC_TIMER_MERGE_POLYMESHDETAIL,l.RC_MAX_TIMERS=r.Module.RC_MAX_TIMERS,r.Detour.FAILURE,r.Detour.SUCCESS,r.Detour.IN_PROGRESS,r.Detour.STATUS_DETAIL_MASK,r.Detour.WRONG_MAGIC,r.Detour.WRONG_VERSION,r.Detour.OUT_OF_MEMORY,r.Detour.INVALID_PARAM,r.Detour.BUFFER_TOO_SMALL,r.Detour.OUT_OF_NODES,r.Detour.PARTIAL_RESULT,r.Detour.ALREADY_OCCUPIED,r.Detour.VERTS_PER_POLYGON,r.Detour.NAVMESH_MAGIC,r.Detour.NAVMESH_VERSION,r.Detour.NAVMESH_STATE_MAGIC,r.Detour.NAVMESH_STATE_VERSION,r.Detour.TILECACHE_MAGIC,r.Detour.TILECACHE_VERSION,r.Detour.TILECACHE_NULL_AREA,r.Detour.TILECACHE_WALKABLE_AREA,r.Detour.TILECACHE_NULL_IDX,r.Detour.NULL_LINK,r.Detour.NULL_LINK,r.Detour.EXT_LINK,r.Detour.OFFMESH_CON_BIDIR,r.Module.DT_STRAIGHTPATH_START,r.Module.DT_STRAIGHTPATH_END,r.Module.DT_STRAIGHTPATH_OFFMESH_CONNECTION,r.Module.DT_STRAIGHTPATH_AREA_CROSSINGS,r.Module.DT_STRAIGHTPATH_ALL_CROSSINGS,r.Module.DT_FINDPATH_ANY_ANGLE,r.Module.DT_RAYCAST_USE_COSTS,r.Module.DT_CROWDAGENT_STATE_INVALID,r.Module.DT_CROWDAGENT_STATE_WALKING,r.Module.DT_CROWDAGENT_STATE_OFFMESH,r.Module.DT_CROWDAGENT_TARGET_NONE,r.Module.DT_CROWDAGENT_TARGET_FAILED,r.Module.DT_CROWDAGENT_TARGET_VALID,r.Module.DT_CROWDAGENT_TARGET_REQUESTING,r.Module.DT_CROWDAGENT_TARGET_WAITING_FOR_QUEUE,r.Module.DT_CROWDAGENT_TARGET_WAITING_FOR_PATH,r.Module.DT_CROWDAGENT_TARGET_VELOCITY,r.Module.DT_COMPRESSEDTILE_FREE_DATA,r.Module.DT_TILE_FREE_DATA}};class v{get size(){return this.raw.size}constructor(e){this.raw=e}get(e){return this.raw.get(e)}set(e,t){this.raw.set(e,t)}resize(e){this.raw.resize(e)}copy(e){this.raw.resize(e.length),this.getHeapView().set(e)}destroy(){r.destroy(this.raw)}getHeapView(){const e=this.getHeap();return new this.typedArrayClass(e.buffer,this.raw.getDataPointer(),this.size)}toTypedArray(){const e=this.getHeapView(),t=new this.typedArrayClass(this.size);return t.set(e),t}}class q extends v{constructor(t){super(t??new r.Module.IntArray);m(this,"typedArrayClass",Int32Array)}getHeap(){return r.Module.HEAP32}static fromRaw(t){return new this(t)}}class z extends v{constructor(t){super(t??new r.Module.UnsignedCharArray);m(this,"typedArrayClass",Uint8Array)}getHeap(){return r.Module.HEAPU8}static fromRaw(t){return new this(t)}}class J extends v{constructor(t){super(t??new r.Module.FloatArray);m(this,"typedArrayClass",Float32Array)}getHeap(){return r.Module.HEAPF32}static fromRaw(t){return new this(t)}}const $=J,ee=q,te=z,R={toRaw:({x:s,y:e,z:t},a)=>a?(a.x=s,a.y=e,a.z=t,a):new r.Module.Vec3(s,e,t),fromRaw:s=>{const{x:e,y:t,z:a}=s;return{x:e,y:t,z:a}},fromArray:([s,e,t])=>({x:s,y:e,z:t}),toArray:({x:s,y:e,z:t})=>[s,e,t],lerp:(s,e,t,a={x:0,y:0,z:0})=>{a.x=s.x+(e.x-s.x)*t,a.y=s.y+(e.y-s.y)*t,a.z=s.z+(e.z-s.z)*t},copy:(s,e={x:0,y:0,z:0})=>{e.x=s.x,e.y=s.y,e.z=s.z}},_=(s,e)=>{const t=[];for(let a=0;a<e;a++)t.push(s(a));return t},U=s=>r.Detour.statusSucceed(s);class re{constructor(e){this.raw=e}vertBase(){return this.raw.vertBase}triBase(){return this.raw.triBase}vertCount(){return this.raw.vertCount}triCount(){return this.raw.triCount}}class se{constructor(e){this.raw=e}ref(){return this.raw.ref}next(){return this.raw.next}edge(){return this.raw.edge}side(){return this.raw.side}bmin(){return this.raw.bmin}bmax(){return this.raw.bmax}}class ae{constructor(e){this.raw=e}bmin(){return R.fromArray(_(e=>this.raw.get_bmin(e),3))}bmax(){return R.fromArray(_(e=>this.raw.get_bmax(e),3))}i(){return this.raw.i}}class V{constructor(e){this.raw=e}pos(e){return this.raw.get_pos(e)}rad(){return this.raw.rad}poly(){return this.raw.poly}flags(){return this.raw.flags}side(){return this.raw.side}userId(){return this.raw.userId}}class ie{constructor(e){this.raw=e}magic(){return this.raw.magic}version(){return this.raw.version}x(){return this.raw.x}y(){return this.raw.y}layer(){return this.raw.layer}userId(){return this.raw.userId}polyCount(){return this.raw.polyCount}vertCount(){return this.raw.vertCount}maxLinkCount(){return this.raw.maxLinkCount}detailMeshCount(){return this.raw.detailMeshCount}detailVertCount(){return this.raw.detailVertCount}detailTriCount(){return this.raw.detailTriCount}bvNodeCount(){return this.raw.bvNodeCount}offMeshConCount(){return this.raw.offMeshConCount}offMeshBase(){return this.raw.offMeshBase}walkableHeight(){return this.raw.walkableHeight}walkableRadius(){return this.raw.walkableRadius}walkableClimb(){return this.raw.walkableClimb}bmin(e){return this.raw.get_bmin(e)}bmax(e){return this.raw.get_bmax(e)}bvQuantFactor(){return this.raw.bvQuantFactor}}class x{constructor(e){this.raw=e}firstLink(){return this.raw.firstLink}verts(e){return this.raw.get_verts(e)}neis(e){return this.raw.get_neis(e)}flags(){return this.raw.flags}vertCount(){return this.raw.vertCount}areaAndType(){return this.raw.get_areaAndtype()}getType(){return this.raw.getType()}}class A{constructor(e){this.raw=e}salt(){return this.raw.salt}linksFreeList(){return this.raw.linksFreeList}header(){return r.isNull(this.raw.header)?null:new ie(this.raw.header)}polys(e){return new x(this.raw.get_polys(e))}verts(e){return this.raw.get_verts(e)}links(e){return new se(this.raw.get_links(e))}detailMeshes(e){return new re(this.raw.get_detailMeshes(e))}detailVerts(e){return this.raw.get_detailVerts(e)}detailTris(e){return this.raw.get_detailTris(e)}bvTree(e){return new ae(this.raw.get_bvTree(e))}offMeshCons(e){return new V(this.raw.get_offMeshCons(e))}data(e){return this.raw.get_data(e)}dataSize(){return this.raw.dataSize}flags(){return this.raw.flags}next(){return new A(this.raw.next)}}const ne=s=>{const e=r.DetourNavMeshBuilder.createNavMeshData(s.raw);return{success:e.success,navMeshData:z.fromRaw(e.navMeshData)}};class oe{constructor(e){this.raw=e??new r.Module.dtNavMeshCreateParams}setPolyMeshCreateParams(e){r.DetourNavMeshBuilder.setPolyMeshCreateParams(this.raw,e.raw)}setPolyMeshDetailCreateParams(e){r.DetourNavMeshBuilder.setPolyMeshDetailCreateParams(this.raw,e.raw)}setOffMeshConnections(e){if(e.length<=0)return;const t=[],a=[],i=[],n=[],u=[],c=[];for(let h=0;h<e.length;h++){const w=e[h];t.push(w.startPosition.x,w.startPosition.y,w.startPosition.z),t.push(w.endPosition.x,w.endPosition.y,w.endPosition.z),a.push(w.radius),i.push(w.bidirectional?1:0),n.push(w.area??0),u.push(w.flags??1),c.push(w.userId??1e3+h)}r.DetourNavMeshBuilder.setOffMeshConnections(this.raw,e.length,t,a,i,n,u,c)}verts(e){return this.raw.get_verts(e)}setVerts(e,t){this.raw.set_verts(e,t)}vertCount(){return this.raw.vertCount}polys(e){return this.raw.get_polys(e)}setPolys(e,t){this.raw.set_polys(e,t)}polyAreas(e){return this.raw.get_polyAreas(e)}setPolyAreas(e,t){this.raw.set_polyAreas(e,t)}polyFlags(e){return this.raw.get_polyFlags(e)}setPolyFlags(e,t){this.raw.set_polyFlags(e,t)}polyCount(){return this.raw.polyCount}nvp(){return this.raw.nvp}setNvp(e){this.raw.nvp=e}detailMeshes(e){return this.raw.get_detailMeshes(e)}setDetailMeshes(e,t){this.raw.set_detailMeshes(e,t)}detailVerts(e){return this.raw.get_detailVerts(e)}setDetailVerts(e,t){this.raw.set_detailVerts(e,t)}detailVertsCount(){return this.raw.detailVertsCount}detailTris(e){return this.raw.get_detailTris(e)}setDetailTris(e,t){this.raw.set_detailTris(e,t)}detailTriCount(){return this.raw.detailTriCount}offMeshConVerts(e){return this.raw.get_offMeshConVerts(e)}offMeshConRad(e){return this.raw.get_offMeshConRad(e)}offMeshConDir(e){return this.raw.get_offMeshConDir(e)}offMeshConAreas(e){return this.raw.get_offMeshConAreas(e)}offMeshConFlags(e){return this.raw.get_offMeshConFlags(e)}offMeshConUserID(e){return this.raw.get_offMeshConUserID(e)}offMeshConCount(){return this.raw.offMeshConCount}userId(){return this.raw.userId}tileX(){return this.raw.tileX}setTileX(e){this.raw.tileX=e}tileY(){return this.raw.tileY}setTileY(e){this.raw.tileY=e}tileLayer(){return this.raw.tileLayer}setTileLayer(e){this.raw.tileLayer=e}boundsMin(){return _(e=>this.raw.get_bmin(e),3)}setBoundsMin(e){this.raw.set_bmin(0,e[0]),this.raw.set_bmin(1,e[1]),this.raw.set_bmin(2,e[2])}boundsMax(){return _(e=>this.raw.get_bmax(e),3)}setBoundsMax(e){this.raw.set_bmax(0,e[0]),this.raw.set_bmax(1,e[1]),this.raw.set_bmax(2,e[2])}walkableHeight(){return this.raw.walkableHeight}setWalkableHeight(e){this.raw.walkableHeight=e}walkableRadius(){return this.raw.walkableRadius}setWalkableRadius(e){this.raw.walkableRadius=e}walkableClimb(){return this.raw.walkableClimb}setWalkableClimb(e){this.raw.walkableClimb=e}cellSize(){return this.raw.cs}setCellSize(e){this.raw.cs=e}cellHeight(){return this.raw.ch}setCellHeight(e){this.raw.ch=e}buildBvTree(){return this.raw.buildBvTree}setBuildBvTree(e){this.raw.buildBvTree=e}}class le{constructor(e){this.raw=e}tiles(e){return new A(this.raw.get_tiles(e))}tileCount(){return this.raw.tileCount}}class ue{constructor(e){this.raw=e}data(){return _(e=>this.raw.get_data(e),this.raw.dataSize)}dataSize(){return this.raw.dataSize}}class he{constructor(e){this.raw=e}tileX(){return this.raw.tileX}tileY(){return this.raw.tileY}}class ce{constructor(e){this.raw=e}data(){return _(e=>this.raw.get_data(e),this.raw.dataSize)}dataSize(){return this.raw.dataSize}}class we{constructor(e){this.raw=e??new r.Module.NavMesh}initSolo(e){return this.raw.initSolo(e.raw)}initTiled(e){return this.raw.initTiled(e.raw)}addTile(e,t,a){const i=new r.UnsignedIntRef,n=this.raw.addTile(e.raw,t,a,i),u=i.value;return r.destroy(i),{status:n,tileRef:u}}decodePolyId(e){const t=new r.UnsignedIntRef,a=new r.UnsignedIntRef,i=new r.UnsignedIntRef;this.raw.decodePolyId(e,t,a,i);const n=t.value;r.destroy(t);const u=a.value;r.destroy(a);const c=i.value;return r.destroy(i),{tileSalt:n,tileIndex:u,tilePolygonIndex:c}}encodePolyId(e,t,a){return this.raw.encodePolyId(e,t,a)}removeTile(e){return new ue(this.raw.removeTile(e))}calcTileLoc(e){return new he(this.raw.calcTileLoc(R.toArray(e)))}getTileAt(e,t,a){const i=this.raw.getTileAt(e,t,a);return r.isNull(i)?null:new A(i)}getTilesAt(e,t,a){return new le(this.raw.getTilesAt(e,t,a))}getTileRefAt(e,t,a){return this.raw.getTileRefAt(e,t,a)}getTileRef(e){return this.raw.getTileRef(e.raw)}getTileByRef(e){const t=this.raw.getTileByRef(e);return r.isNull(t)?null:new A(t)}getMaxTiles(){return this.raw.getMaxTiles()}getTile(e){return new A(this.raw.getTile(e))}getTileAndPolyByRef(e){const t=this.raw.getTileAndPolyByRef(e),a=new A(t.tile),i=new x(t.poly);return{success:U(t.status),status:t.status,tile:a,poly:i}}getTileAndPolyByRefUnsafe(e){const t=this.raw.getTileAndPolyByRef(e),a=new A(t.tile),i=new x(t.poly);return{tile:a,poly:i}}isValidPolyRef(e){return this.raw.isValidPolyRef(e)}getPolyRefBase(e){return this.raw.getPolyRefBase(e.raw)}getOffMeshConnectionPolyEndPoints(e,t){const a=new r.Vec3,i=new r.Vec3,n=this.raw.getOffMeshConnectionPolyEndPoints(e,t,a,i),u=R.fromRaw(a);r.destroy(a);const c=R.fromRaw(i);return r.destroy(i),{success:U(n),status:n,start:u,end:c}}getOffMeshConnectionByRef(e){return new V(this.raw.getOffMeshConnectionByRef(e))}setPolyFlags(e,t){return this.raw.setPolyFlags(e,t)}getPolyFlags(e){const t=new r.UnsignedShortRef,a=this.raw.getPolyFlags(e,t),i=t.value;return r.destroy(t),{status:a,flags:i}}setPolyArea(e,t){return this.raw.setPolyArea(e,t)}getPolyArea(e){const t=new r.UnsignedCharRef,a=this.raw.getPolyArea(e,t),i=t.value;return r.destroy(t),{status:a,area:i}}getTileStateSize(e){return this.raw.getTileStateSize(e.raw)}storeTileState(e,t){return new ce(this.raw.storeTileState(e.raw,t))}restoreTileState(e,t,a){return this.raw.restoreTileState(e.raw,t,a)}getDebugNavMesh(){const e=[],t=[];let a=0;const i=this.getMaxTiles();for(let n=0;n<i;n++){const u=this.getTile(n),c=u.header();if(!c)continue;const h=c.polyCount();for(let w=0;w<h;++w){const f=u.polys(w);if(f.getType()===1)continue;const I=f.vertCount(),L=u.detailMeshes(w),b=L.triBase(),y=L.triCount();for(let D=0;D<y;++D){const S=(b+D)*4;for(let o=0;o<3;++o){if(u.detailTris(S+o)<I){const d=f.verts(u.detailTris(S+o))*3;e.push(u.verts(d),u.verts(d+1),u.verts(d+2))}else{const d=(L.vertBase()+u.detailTris(S+o)-f.vertCount())*3;e.push(u.detailVerts(d),u.detailVerts(d+1),u.detailVerts(d+2))}t.push(a++)}}}}return[e,t]}destroy(){this.raw.destroy(),r.Module.destroy(this.raw)}}const W={borderSize:0,tileSize:0,cs:.2,ch:.2,walkableSlopeAngle:60,walkableHeight:2,walkableClimb:2,walkableRadius:.5,maxEdgeLen:12,maxSimplificationError:1.3,minRegionArea:8,mergeRegionArea:20,maxVertsPerPoly:6,detailSampleDist:6,detailSampleMaxError:1},Re=s=>{const e={...W,...s},t=new r.Module.rcConfig;return t.borderSize=e.borderSize,t.tileSize=e.tileSize,t.cs=e.cs,t.ch=e.ch,t.walkableSlopeAngle=e.walkableSlopeAngle,t.walkableHeight=e.walkableHeight,t.walkableClimb=e.walkableClimb,t.walkableRadius=e.walkableRadius,t.maxEdgeLen=e.maxEdgeLen,t.maxSimplificationError=e.maxSimplificationError,t.minRegionArea=e.minRegionArea,t.mergeRegionArea=e.mergeRegionArea,t.maxVertsPerPoly=e.maxVertsPerPoly,t.detailSampleDist=e.detailSampleDist,t.detailSampleMaxError=e.detailSampleMaxError,t};class _e{constructor(e=!0){m(this,"logs",[]);m(this,"startTimes",{});m(this,"accumulatedTimes",{});const t=new r.Module.RecastBuildContextImpl;t.log=(a,i,n)=>{if(!this.raw.logEnabled())return;const u=i,c=new Uint8Array(r.Module.HEAPU8.buffer,u,n),h=new Uint8Array(n);h.set(c);const w=new TextDecoder().decode(h);this.log(a,w)},t.resetLog=()=>{this.resetLog()},t.startTimer=a=>{this.raw.timerEnabled()&&this.startTimer(a)},t.stopTimer=a=>{this.raw.timerEnabled()&&this.stopTimer(a)},t.getAccumulatedTime=a=>this.raw.timerEnabled()?this.getAccumulatedTime(a):-1,t.resetTimers=()=>{this.raw.timerEnabled()&&(this.startTimes={},this.accumulatedTimes={})},this.raw=new r.Module.RecastBuildContext(t),this.raw.enableTimer(e),this.raw.enableLog(e),this.resetTimers()}log(e,t){this.logs.push({category:e,msg:t})}resetLog(){this.logs=[]}startTimer(e){this.startTimes[e]=performance.now()}stopTimer(e){const a=performance.now()-this.startTimes[e];this.accumulatedTimes[e]===-1?this.accumulatedTimes[e]=a:this.accumulatedTimes[e]+=a}getAccumulatedTime(e){return this.accumulatedTimes[e]}resetTimers(){for(let e=0;e<l.RC_MAX_TIMERS;e++)this.startTimes[e]=-1,this.accumulatedTimes[e]=-1}}class p{constructor(e){this.raw=e}smin(){return this.raw.smin}smax(){return this.raw.smax}area(){return this.raw.area}next(){return r.isNull(this.raw.next)?null:new p(this.raw.next)}}class H{constructor(e){this.raw=e}next(){return r.isNull(this.raw.next)?null:new H(this.raw.next)}items(e){return new p(this.raw.get_items(e))}}class de{constructor(e){this.raw=e}width(){return this.raw.width}height(){return this.raw.height}bmin(){return R.fromArray(_(e=>this.raw.get_bmin(e),3))}bmax(){return R.fromArray(_(e=>this.raw.get_bmax(e),3))}cs(){return this.raw.cs}ch(){return this.raw.ch}spans(e){return new p(this.raw.get_spans(e))}pools(e){return new H(this.raw.get_pools(e))}freelist(e){return new p(this.raw.get_freelist(e))}}class Te{constructor(e){this.raw=e}index(){return this.raw.get_index()}count(){return this.raw.get_count()}}class Ee{constructor(e){this.raw=e}y(){return this.raw.get_y()}reg(){return this.raw.get_reg()}con(){return this.raw.get_con()}h(){return this.raw.get_h()}}class ge{constructor(e){this.raw=e}width(){return this.raw.width}height(){return this.raw.height}spanCount(){return this.raw.spanCount}walkableHeight(){return this.raw.walkableHeight}walkableClimb(){return this.raw.walkableClimb}borderSize(){return this.raw.borderSize}maxDistance(){return this.raw.maxDistance}maxRegions(){return this.raw.maxRegions}bmin(){return R.fromArray(_(e=>this.raw.get_bmin(e),3))}bmax(){return R.fromArray(_(e=>this.raw.get_bmax(e),3))}cs(){return this.raw.cs}ch(){return this.raw.ch}cells(e){return new Te(this.raw.get_cells(e))}spans(e){return new Ee(this.raw.get_spans(e))}dist(e){return this.raw.get_dist(e)}areas(e){return this.raw.get_areas(e)}}class Me{constructor(e){this.raw=e}verts(e){return this.raw.get_verts(e)}nverts(){return this.raw.nverts}rverts(e){return this.raw.get_rverts(e)}nrverts(){return this.raw.nrverts}reg(){return this.raw.reg}area(){return this.raw.area}}class Ce{constructor(e){this.raw=e}conts(e){return new Me(this.raw.get_conts(e))}nconts(){return this.raw.nconts}bmin(){return R.fromArray(_(e=>this.raw.get_bmin(e),3))}bmax(){return R.fromArray(_(e=>this.raw.get_bmax(e),3))}cs(){return this.raw.cs}ch(){return this.raw.ch}width(){return this.raw.width}height(){return this.raw.height}borderSize(){return this.raw.borderSize}maxError(){return this.raw.maxError}}class Ae{constructor(e){this.raw=e}verts(e){return this.raw.get_verts(e)}polys(e){return this.raw.get_polys(e)}regs(e){return this.raw.get_regs(e)}flags(e){return this.raw.get_flags(e)}setFlags(e,t){this.raw.set_flags(e,t)}areas(e){return this.raw.get_areas(e)}setAreas(e,t){return this.raw.set_areas(e,t)}nverts(){return this.raw.nverts}npolys(){return this.raw.npolys}maxpolys(){return this.raw.maxpolys}nvp(){return this.raw.nvp}bmin(){return R.fromArray(_(e=>this.raw.get_bmin(e),3))}bmax(){return R.fromArray(_(e=>this.raw.get_bmax(e),3))}cs(){return this.raw.cs}ch(){return this.raw.ch}borderSize(){return this.raw.borderSize}maxEdgeError(){return this.raw.maxEdgeError}}class fe{constructor(e){this.raw=e}meshes(e){return this.raw.get_meshes(e)}verts(e){return this.raw.get_verts(e)}tris(e){return this.raw.get_tris(e)}nmeshes(){return this.raw.nmeshes}nverts(){return this.raw.nverts}ntris(){return this.raw.ntris}}const me=(s,e,t)=>r.Recast.calcGridSize(s,e,t),Ie=(s,e,t,a,i,n,u,c)=>r.Recast.createHeightfield(s.raw,e.raw,t,a,i,n,u,c),ye=(s,e,t,a,i,n,u)=>r.Recast.markWalkableTriangles(s.raw,e,t.raw,a,i.raw,n,u.raw),De=(s,e,t,a,i,n,u,c=1)=>r.Recast.rasterizeTriangles(s.raw,e.raw,t,a.raw,i.raw,n,u.raw,c),Se=(s,e,t)=>r.Recast.filterLowHangingWalkableObstacles(s.raw,e,t.raw),Le=(s,e,t,a)=>r.Recast.filterLedgeSpans(s.raw,e,t,a.raw),be=(s,e,t)=>r.Recast.filterWalkableLowHeightSpans(s.raw,e,t.raw),pe=(s,e,t,a,i)=>r.Recast.buildCompactHeightfield(s.raw,e,t,a.raw,i.raw),Ne=(s,e,t)=>r.Recast.erodeWalkableArea(s.raw,e,t.raw),Oe=(s,e)=>r.Recast.buildDistanceField(s.raw,e.raw),Pe=(s,e,t,a,i)=>r.Recast.buildRegions(s.raw,e.raw,t,a,i),xe=(s,e,t,a,i,n=l.RC_CONTOUR_TESS_WALL_EDGES)=>r.Recast.buildContours(s.raw,e.raw,t,a,i.raw,n),ve=(s,e,t,a)=>r.Recast.buildPolyMesh(s.raw,e.raw,t,a.raw),He=(s,e,t,a,i,n)=>r.Recast.buildPolyMeshDetail(s.raw,e.raw,t.raw,a,i,n.raw),Be=()=>new de(r.Recast.allocHeightfield()),G=s=>r.Recast.freeHeightfield(s.raw),Ue=()=>new ge(r.Recast.allocCompactHeightfield()),F=s=>r.Recast.freeCompactHeightfield(s.raw),Ge=()=>new Ce(r.Recast.allocContourSet()),k=s=>r.Recast.freeContourSet(s.raw),Fe=()=>new Ae(r.Recast.allocPolyMesh()),ke=s=>r.Recast.freePolyMesh(s.raw),ze=()=>new fe(r.Recast.allocPolyMeshDetail()),Ve=s=>r.Recast.freePolyMeshDetail(s.raw),We=(s,e)=>{const t=r.NavMeshExporter.exportNavMesh(s.raw,e==null?void 0:e.raw),a=new Uint8Array(r.Module.HEAPU8.buffer,t.dataPointer,t.size),i=new Uint8Array(t.size);return i.set(a),r.NavMeshExporter.freeNavMeshExport(t),i},Ye=s=>We(s),Xe=(s,e)=>{const t={x:1/0,y:1/0,z:1/0},a={x:-1/0,y:-1/0,z:-1/0};for(let i=0;i<e.length;i++){const n=e[i],u=s[n*3],c=s[n*3+1],h=s[n*3+2];t.x=Math.min(t.x,u),t.y=Math.min(t.y,c),t.z=Math.min(t.z,h),a.x=Math.max(a.x,u),a.y=Math.max(a.y,c),a.z=Math.max(a.z,h)}return{bbMin:R.toArray(t),bbMax:R.toArray(a)}},Ke={...W},Qe=(s,e,t={},a=!1)=>{if(!r.Module)throw new Error('"init" must be called before using any recast-navigation-js APIs. See: https://github.com/isaac-mason/recast-navigation-js?tab=readme-ov-file#initialization');const i=new _e,n={type:"solo",buildContext:i},u=new we,c=()=>{a||(n.heightfield&&(G(n.heightfield),n.heightfield=void 0),n.compactHeightfield&&(F(n.compactHeightfield),n.compactHeightfield=void 0),n.contourSet&&(k(n.contourSet),n.contourSet=void 0),n.polyMesh&&(ke(n.polyMesh),n.polyMesh=void 0),n.polyMeshDetail&&(Ve(n.polyMeshDetail),n.polyMeshDetail=void 0))},h=C=>(c(),u.destroy(),{navMesh:void 0,success:!1,intermediates:n,error:C}),w=s,f=e.length,I=new $;I.copy(w);const L=e,b=e.length/3,y=new ee;y.copy(L);const{bbMin:D,bbMax:S}=Xe(s,e),o=Re({...Ke,...t});o.minRegionArea=o.minRegionArea*o.minRegionArea,o.mergeRegionArea=o.mergeRegionArea*o.mergeRegionArea,o.detailSampleDist=o.detailSampleDist<.9?0:o.cs*o.detailSampleDist,o.detailSampleMaxError=o.ch*o.detailSampleMaxError;const d=me(D,S,o.cs);o.width=d.width,o.height=d.height;const g=Be();if(n.heightfield=g,!Ie(i,g,o.width,o.height,D,S,o.cs,o.ch))return h("Could not create heightfield");const N=new te;if(N.resize(b),ye(i,o.walkableSlopeAngle,I,f,y,b,N),!De(i,I,f,y,N,b,g,o.walkableClimb))return h("Could not rasterize triangles");N.destroy(),I.destroy(),y.destroy(),Se(i,o.walkableClimb,g),Le(i,o.walkableHeight,o.walkableClimb,g),be(i,o.walkableHeight,g);const M=Ue();if(n.compactHeightfield=M,!pe(i,o.walkableHeight,o.walkableClimb,g,M))return h("Failed to build compact data");if(a||(G(g),n.heightfield=void 0),!Ne(i,o.walkableRadius,M))return h("Failed to erode walkable area");if(!Oe(i,M))return h("Failed to build distance field");if(!Pe(i,M,o.borderSize,o.minRegionArea,o.mergeRegionArea))return h("Failed to build regions");const O=Ge();if(n.contourSet=O,!xe(i,M,o.maxSimplificationError,o.maxEdgeLen,O,l.RC_CONTOUR_TESS_WALL_EDGES))return h("Failed to create contours");const E=Fe();if(n.polyMesh=E,!ve(i,O,o.maxVertsPerPoly,E))return h("Failed to triangulate contours");const P=ze();if(n.polyMeshDetail=P,!He(i,E,M,o.detailSampleDist,o.detailSampleMaxError,P))return h("Failed to build detail mesh");a||(F(M),n.compactHeightfield=void 0,k(O),n.contourSet=void 0);for(let C=0;C<E.npolys();C++)E.areas(C)==l.RC_WALKABLE_AREA&&E.setAreas(C,0),E.areas(C)==0&&E.setFlags(C,1);const T=new oe;T.setPolyMeshCreateParams(E),T.setPolyMeshDetailCreateParams(P),T.setWalkableHeight(o.walkableHeight),T.setWalkableRadius(o.walkableRadius),T.setWalkableClimb(o.walkableClimb),T.setCellSize(o.cs),T.setCellHeight(o.ch),T.setBuildBvTree(!0),t.offMeshConnections&&T.setOffMeshConnections(t.offMeshConnections);const B=ne(T);if(!B.success)return h("Failed to create Detour navmesh data");const{navMeshData:Y}=B;return u.initSolo(Y)?{success:!0,navMesh:u,intermediates:n}:h("Failed to create Detour navmesh")};self.onmessage=async s=>{await j();const{positions:e,indices:t,config:a}=s.data,{success:i,navMesh:n}=Qe(e,t,a);if(!i)return;const u=Ye(n);self.postMessage(u,{transfer:[u.buffer]}),n.destroy()};
